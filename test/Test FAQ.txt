Запуск функциональных тестов.
	1) Установка 
		1) Ставим NodeJS и NPM, на windows - https://nodejs.org/en/
		2) Ставим через командную строку глобально protractor - https://angular.github.io/protractor/#/
			npm install -g protractor
			webdriver-manager update
			webdriver-manager start
		3) В коммандной строке переходим в папку IdeaPlatform_SAAS\trunk\test\e2e (можно скопировать из SVN только её) и выполняем 
			npm install
		4) теперь запуск тестов можно выполнять как 	
			protractor conf.js
		5) Настройки соединения
		
	2) Описание тестов
		504
		Тест создает заданное новый workspace с менеджером и приглашает в него 5-10 пользователей. После чего каждый из пользователей входит в систему.
		После этого список созданных пользователей выводится в консоль.
		Также обновляются 
		'../stress/logins_saas.csv'
		'../stress/logins_saas_managers.csv'
		Настройки хранятся в файле conf.js
		Наиболее важные -  
			var host = '193.124.178.223'; // '193.124.178.223'  'runidea.online'   '127.0.0.1'
		  	var hostDB = '193.124.178.224'; //'193.124.178.224' null;
		  	var port = 8081
	  	Порт СУБД считается равным 5432
	  

Запуск нагрузочных тестов

1) Установка 
	Для запуска нагрузочных тестов используется пакет JMeter. Он запускает написанные в нем тестовые сценарии в несколько потоков (обычно до сотни, что соответсвует нескольким тысячам пользователей) при этом внутри каждого потока написанные тесты запускаются последовательно и со своими параметрами
	Устанавливаем актуальную версию JVM
	Скачиваем последнюю версию JMeter (http://jmeter.apache.org/) и распаковываем архив с ней (далее считаем что в папку java/jmeter, убеждаемся что там есть lib и lib/ext) 
	Скачиваем дополнение JMeterPlugins-ExtrasLibs (http://jmeter-plugins.org/downloads/all/) и распаковываем его в папку java/jmeter
	Открываем java/jmeter/bin/ApacheJMeter.jar И пробуем открыть файл теста	

2) Работа с тестами
	На данный момент нагрузочные тесты для SAAS реализованы в рамках задачи 503, соответственно и файл тестов называется 503.jmx

	503

	Входные данные - файлы logins_saas_managers.csv и logins_saas.csv должны лежать в тойже папке, что и файл 503.jmx.
	Первый из них содержит всех пользователей, учавствующих в тестировании, в формате <email>,<password>,<isAdmin ? 1 : 0>, второй тотже список, но только из админов.

	Открываем описание задачи и видим в ней Сценарий 2 и Сценарий 3. Поскольку число процессов для сценария 3 должно быть больше, чем для Сценария 2, то Сценарий 2 и Сценарий 3 нельзя запускать последовательно. При этом Сценарий 3 использует данные Сценария 2, следовательно перед запуском основного теста необходим предварительный запуск Сценария 2.

	Для реализации такого поведения в задаче созданы две ветки (элементы типа Thread Group) "Подготовка к задаче 503" и непосредственно "Задача 503", для правильной работы должнабыть выбрана только одна ветка. Включение/отключение ветки - Ctrl+T. Все ветки после этих двух служебные и на время тестирования отключаются. Перед этими двумя ветками блок с адресом и портом тестируемого сервера.
	Каждой из веток указан входной файл (logins_saas_managers.csv в подготовке и logins_saas.csv в основном тесте) содержащий список пар логин-пароль
	У каждой из них есть свои параметры. Число потоков, в подготовке оно обычно больше или равно числу администраторов в файле logins_saas_managers.csv, в основном тесте - в зависимости от постановки задачи (но не нет смысла делать больше числа пользователей). Период прогрева и количество циклов - насколько нужно растянуть по времени запуск программы, можно оставить как есть.
	Ветка подготовки может быть запущена только один раз для файла каждого набора workspace'ов. При повторном запуске тестов это не обязательно. 
	Для мониторинга вставляем в соответствующую ветку блоки "View Results in Table", он содержат спиок всех запросов к серверу. Сброс значения перед новым тестом - копируем в текущую ветку, старую удаляем.

	Таким образом запуск теста будет происходить следующим образом.
	1) Проверяем файлы  logins_saas_managers.csv и logins_saas.csv
	2) Устанавливаем в блоке "Параметры запросов по умолчанию" адрес и порт запросов
	3) Если раньше не работали с этим списком (иначе сразу к пункту 6) активируем "Подготовка к задаче 503" проверяем, что у нее внутри есть включенный блок мониторинга, а число потоков не меньше числа рабочих пространств в тесте. Деактивируем "Задача 503".
	4) Запускаем тест и ждем окончания, можем наблюдать за ходом теста по блоку "View Results Tree" или "View Results in Table".
	5) Проверяем что все нормально
	6) Деактивируем "Подготовка к задаче 503", активируем "Задача 503", проверяем число потоков и количество циклов, проверяем, что есть работающий пустой блок "View Results in Table"
	7) Запускаем тест и ждем окончания, можем наблюдать за ходом теста по блоку "View Results Tree".
	8) Копируем данные из "View Results Tree" excel файл Result.xlsx на новую вкладку, копируем колонки с расчетами аналогично уже имеющимся в файле вкладкам
	9) Анализируем данные в Excel



			